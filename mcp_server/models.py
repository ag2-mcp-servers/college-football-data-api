# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:16:39+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class PassingDowns(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    successRate: Optional[float] = None


class PassingPlays(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class RushingPlays(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class StandardDowns(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    successRate: Optional[float] = None


class Defense(BaseModel):
    drives: Optional[int] = None
    explosiveness: Optional[float] = None
    lineYards: Optional[float] = None
    lineYardsTotal: Optional[float] = None
    openFieldYards: Optional[float] = None
    openFieldYardsTotal: Optional[int] = None
    passingDowns: Optional[PassingDowns] = None
    passingPlays: Optional[PassingPlays] = None
    plays: Optional[int] = None
    powerSuccess: Optional[float] = None
    ppa: Optional[float] = None
    rushingPlays: Optional[RushingPlays] = None
    secondLevelYards: Optional[float] = None
    secondLevelYardsTotal: Optional[int] = None
    standardDowns: Optional[StandardDowns] = None
    stuffRate: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class Offense(BaseModel):
    drives: Optional[int] = None
    explosiveness: Optional[float] = None
    lineYards: Optional[float] = None
    lineYardsTotal: Optional[float] = None
    openFieldYards: Optional[float] = None
    openFieldYardsTotal: Optional[int] = None
    passingDowns: Optional[PassingDowns] = None
    passingPlays: Optional[PassingPlays] = None
    plays: Optional[int] = None
    powerSuccess: Optional[float] = None
    ppa: Optional[float] = None
    rushingPlays: Optional[RushingPlays] = None
    secondLevelYards: Optional[float] = None
    secondLevelYardsTotal: Optional[int] = None
    standardDowns: Optional[StandardDowns] = None
    stuffRate: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class AdvancedGameStat(BaseModel):
    defense: Optional[Defense] = None
    gameId: Optional[int] = None
    offense: Optional[Offense] = None
    opponent: Optional[str] = None
    season: Optional[int] = None
    team: Optional[str] = None
    week: Optional[int] = None


class FieldPosition(BaseModel):
    averagePredictedPoints: Optional[float] = None
    averageStart: Optional[float] = None


class Havoc(BaseModel):
    db: Optional[float] = None
    frontSeven: Optional[float] = None
    total: Optional[float] = None


class PassingDowns2(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    rate: Optional[float] = None
    successRate: Optional[float] = None


class PassingPlays2(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    rate: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class RushingPlays2(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    rate: Optional[float] = None
    successRate: Optional[float] = None
    totalPPA: Optional[float] = None


class StandardDowns2(BaseModel):
    explosiveness: Optional[float] = None
    ppa: Optional[float] = None
    rate: Optional[float] = None
    successRate: Optional[float] = None


class Defense1(BaseModel):
    drives: Optional[int] = None
    explosiveness: Optional[float] = None
    fieldPosition: Optional[FieldPosition] = None
    havoc: Optional[Havoc] = None
    lineYards: Optional[float] = None
    lineYardsTotal: Optional[float] = None
    openFieldYards: Optional[float] = None
    openFieldYardsTotal: Optional[int] = None
    passingDowns: Optional[PassingDowns2] = None
    passingPlays: Optional[PassingPlays2] = None
    plays: Optional[int] = None
    pointsPerOpportunity: Optional[float] = None
    powerSuccess: Optional[float] = None
    ppa: Optional[float] = None
    rushingPlays: Optional[RushingPlays2] = None
    secondLevelYards: Optional[float] = None
    secondLevelYardsTotal: Optional[int] = None
    standardDowns: Optional[StandardDowns2] = None
    stuffRate: Optional[float] = None
    successRate: Optional[float] = None
    totalOpportunies: Optional[int] = None
    totalPPA: Optional[float] = None


class Offense1(BaseModel):
    drives: Optional[int] = None
    explosiveness: Optional[float] = None
    fieldPosition: Optional[FieldPosition] = None
    havoc: Optional[Havoc] = None
    lineYards: Optional[float] = None
    lineYardsTotal: Optional[float] = None
    openFieldYards: Optional[float] = None
    openFieldYardsTotal: Optional[int] = None
    passingDowns: Optional[PassingDowns2] = None
    passingPlays: Optional[PassingPlays2] = None
    plays: Optional[int] = None
    pointsPerOpportunity: Optional[float] = None
    powerSuccess: Optional[float] = None
    ppa: Optional[float] = None
    rushingPlays: Optional[RushingPlays2] = None
    secondLevelYards: Optional[float] = None
    secondLevelYardsTotal: Optional[int] = None
    standardDowns: Optional[StandardDowns2] = None
    stuffRate: Optional[float] = None
    successRate: Optional[float] = None
    totalOpportunies: Optional[int] = None
    totalPPA: Optional[float] = None


class AdvancedSeasonStat(BaseModel):
    conference: Optional[str] = None
    defense: Optional[Defense1] = None
    offense: Optional[Offense1] = None
    season: Optional[int] = None
    team: Optional[str] = None


class Average(BaseModel):
    passing: Optional[float] = None
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    rushing: Optional[float] = None
    total: Optional[float] = None


class Cumulative(BaseModel):
    passing: Optional[float] = None
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    rushing: Optional[float] = None
    total: Optional[float] = None


class PpaItem(BaseModel):
    average: Optional[Average] = None
    cumulative: Optional[Cumulative] = None
    player: Optional[str] = None
    position: Optional[str] = None
    team: Optional[str] = None


class UsageItem(BaseModel):
    passing: Optional[float] = None
    player: Optional[str] = None
    position: Optional[str] = None
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    rushing: Optional[float] = None
    team: Optional[str] = None
    total: Optional[float] = None


class Players(BaseModel):
    ppa: Optional[List[PpaItem]] = None
    usage: Optional[List[UsageItem]] = None


class Overall(BaseModel):
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    total: Optional[float] = None


class Passing(BaseModel):
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    total: Optional[float] = None


class Rushing(BaseModel):
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    total: Optional[float] = None


class CumulativePpaItem(BaseModel):
    overall: Optional[Overall] = None
    passing: Optional[Passing] = None
    plays: Optional[float] = None
    rushing: Optional[Rushing] = None
    team: Optional[str] = None


class Explosivenes(BaseModel):
    overall: Optional[Overall] = None
    team: Optional[str] = None


class FieldPositionItem(BaseModel):
    averageStart: Optional[float] = None
    averageStartingPredictedPoints: Optional[float] = None
    team: Optional[str] = None


class HavocItem(BaseModel):
    db: Optional[float] = None
    frontSeven: Optional[float] = None
    team: Optional[str] = None
    total: Optional[float] = None


class PpaItem1(BaseModel):
    overall: Optional[Overall] = None
    passing: Optional[Passing] = None
    plays: Optional[float] = None
    rushing: Optional[Rushing] = None
    team: Optional[str] = None


class RushingItem(BaseModel):
    lineYards: Optional[float] = None
    lineYardsAverage: Optional[float] = None
    openFieldYards: Optional[int] = None
    openFieldYardsAverage: Optional[float] = None
    powerSuccess: Optional[float] = None
    secondLevelYards: Optional[int] = None
    secondLevelYardsAverage: Optional[float] = None
    stuffRate: Optional[float] = None
    team: Optional[str] = None


class ScoringOpportunity(BaseModel):
    opportunities: Optional[int] = None
    points: Optional[int] = None
    pointsPerOpportunity: Optional[float] = None
    team: Optional[str] = None


class PassingDowns4(BaseModel):
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    total: Optional[float] = None


class StandardDowns4(BaseModel):
    quarter1: Optional[float] = None
    quarter2: Optional[float] = None
    quarter3: Optional[float] = None
    quarter4: Optional[float] = None
    total: Optional[float] = None


class SuccessRate(BaseModel):
    overall: Optional[Overall] = None
    passingDowns: Optional[PassingDowns4] = None
    standardDowns: Optional[StandardDowns4] = None
    team: Optional[str] = None


class Teams(BaseModel):
    cumulativePpa: Optional[List[CumulativePpaItem]] = None
    explosiveness: Optional[List[Explosivenes]] = None
    fieldPosition: Optional[List[FieldPositionItem]] = None
    havoc: Optional[List[HavocItem]] = None
    ppa: Optional[List[PpaItem1]] = None
    rushing: Optional[List[RushingItem]] = None
    scoringOpportunities: Optional[List[ScoringOpportunity]] = None
    successRates: Optional[List[SuccessRate]] = None


class BoxScore(BaseModel):
    players: Optional[Players] = None
    teams: Optional[Teams] = None


class Season(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    postseason_rank: Optional[int] = Field(
        None, description='Final ranking in the AP poll'
    )
    preseason_rank: Optional[int] = Field(
        None, description='Rank in the AP preseason poll'
    )
    school: Optional[str] = None
    sp_defense: Optional[float] = Field(None, description='Final SP+ defensive rating')
    sp_offense: Optional[float] = Field(None, description='Final SP+ offensive rating')
    sp_overall: Optional[float] = Field(None, description='Final overall SP+ rating')
    srs: Optional[float] = Field(None, description='Final SRS rankings')
    ties: Optional[int] = None
    wins: Optional[int] = None
    year: Optional[str] = None


class Coach(BaseModel):
    first_name: Optional[str] = None
    hire_date: Optional[str] = None
    last_name: Optional[str] = None
    seasons: Optional[List[Season]] = None


class Conference(BaseModel):
    abbreviation: Optional[str] = None
    classification: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    short_name: Optional[str] = None


class Defense2(BaseModel):
    explosiveness: Optional[float] = None
    havoc: Optional[Havoc] = None
    pasing: Optional[float] = None
    passingDowns: Optional[float] = None
    rating: Optional[float] = None
    rushing: Optional[float] = None
    standardDowns: Optional[float] = None
    success: Optional[float] = None


class Offense2(BaseModel):
    explosiveness: Optional[float] = None
    pace: Optional[float] = None
    passing: Optional[float] = None
    passingDowns: Optional[float] = None
    rating: Optional[float] = None
    runRate: Optional[float] = None
    rushing: Optional[float] = None
    standardDowns: Optional[float] = None
    success: Optional[float] = None


class SpecialTeams(BaseModel):
    rating: Optional[float] = None


class ConferenceSPRating(BaseModel):
    conference: Optional[str] = None
    defense: Optional[Defense2] = None
    offense: Optional[Offense2] = None
    rating: Optional[float] = None
    secondOrderWins: Optional[float] = None
    sos: Optional[float] = None
    specialTeams: Optional[SpecialTeams] = None
    year: Optional[int] = None


class HometownInfo(BaseModel):
    city: Optional[str] = None
    country: Optional[str] = None
    countryFips: Optional[int] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    state: Optional[str] = None


class DraftPick(BaseModel):
    collegeAthleteId: Optional[int] = None
    collegeConference: Optional[str] = None
    collegeId: Optional[int] = None
    collegeTeam: Optional[str] = None
    height: Optional[int] = None
    hometownInfo: Optional[HometownInfo] = None
    name: Optional[str] = None
    nflAthleteId: Optional[int] = None
    nflTeam: Optional[str] = None
    overall: Optional[int] = None
    pick: Optional[int] = None
    position: Optional[str] = None
    preDraftGrade: Optional[int] = None
    preDraftPositionRanking: Optional[int] = None
    preDraftRanking: Optional[int] = None
    round: Optional[int] = None
    weight: Optional[int] = None
    year: Optional[int] = None


class DraftPosition(BaseModel):
    abbreviation: Optional[str] = None
    name: Optional[str] = None


class DraftTeam(BaseModel):
    displayName: Optional[str] = None
    location: Optional[str] = None
    logo: Optional[str] = None
    nickname: Optional[str] = None


class EndTime(BaseModel):
    minutes: Optional[int] = None
    seconds: Optional[int] = None


class StartTime(BaseModel):
    minutes: Optional[int] = None
    seconds: Optional[int] = None


class Drive(BaseModel):
    defense: Optional[str] = None
    defense_conference: Optional[str] = None
    drive_number: Optional[int] = None
    drive_result: Optional[str] = None
    end_defense_score: Optional[int] = None
    end_offense_score: Optional[int] = None
    end_period: Optional[int] = None
    end_time: Optional[EndTime] = None
    end_yardline: Optional[int] = None
    end_yards_to_goal: Optional[int] = None
    game_id: Optional[int] = None
    id: Optional[int] = None
    is_home_offense: Optional[bool] = None
    offense: Optional[str] = None
    offense_conference: Optional[str] = None
    plays: Optional[int] = None
    scoring: Optional[bool] = None
    start_defense_score: Optional[int] = None
    start_offense_score: Optional[int] = None
    start_period: Optional[int] = None
    start_time: Optional[StartTime] = None
    start_yardline: Optional[int] = None
    start_yards_to_goal: Optional[int] = None
    yards: Optional[int] = None


class Game(BaseModel):
    attendance: Optional[int] = None
    away_conference: Optional[str] = None
    away_division: Optional[str] = None
    away_id: Optional[int] = None
    away_line_scores: Optional[List[int]] = None
    away_points: Optional[int] = None
    away_post_win_prob: Optional[float] = None
    away_postgame_elo: Optional[int] = None
    away_pregame_elo: Optional[int] = None
    away_team: Optional[str] = None
    completed: Optional[bool] = None
    conference_game: Optional[bool] = None
    excitement_index: Optional[float] = None
    highlights: Optional[str] = None
    home_conference: Optional[str] = None
    home_division: Optional[str] = None
    home_id: Optional[int] = None
    home_line_scores: Optional[List[int]] = None
    home_points: Optional[int] = None
    home_post_win_prob: Optional[float] = None
    home_postgame_elo: Optional[int] = None
    home_pregame_elo: Optional[int] = None
    home_team: Optional[str] = None
    id: Optional[int] = None
    neutral_site: Optional[bool] = None
    notes: Optional[str] = None
    season: Optional[int] = None
    season_type: Optional[str] = None
    start_date: Optional[str] = None
    start_time_tbd: Optional[bool] = None
    venue: Optional[str] = None
    venue_id: Optional[int] = None
    week: Optional[int] = None


class Line(BaseModel):
    awayMoneyline: Optional[float] = None
    formattedSpread: Optional[str] = None
    homeMoneyline: Optional[float] = None
    overUnder: Optional[float] = None
    overUnderOpen: Optional[float] = None
    provider: Optional[str] = None
    spread: Optional[float] = None
    spreadOpen: Optional[float] = None


class GameLines(BaseModel):
    awayConference: Optional[str] = None
    awayScore: Optional[int] = None
    awayTeam: Optional[str] = None
    homeConference: Optional[str] = None
    homeScore: Optional[int] = None
    homeTeam: Optional[str] = None
    id: Optional[int] = None
    lines: Optional[List[Line]] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    startDate: Optional[str] = None
    week: Optional[int] = None


class GameMedia(BaseModel):
    awayConference: Optional[str] = None
    awayTeam: Optional[str] = None
    homeConference: Optional[str] = None
    homeTeam: Optional[str] = None
    id: Optional[int] = None
    isStartTimeTBD: Optional[bool] = None
    mediaType: Optional[str] = None
    outlet: Optional[str] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    startTime: Optional[str] = None
    week: Optional[int] = None


class Defense3(BaseModel):
    firstDown: Optional[float] = None
    overall: Optional[float] = None
    passing: Optional[float] = None
    rushing: Optional[float] = None
    secondDown: Optional[float] = None
    thirdDown: Optional[float] = None


class Offense3(BaseModel):
    firstDown: Optional[float] = None
    overall: Optional[float] = None
    passing: Optional[float] = None
    rushing: Optional[float] = None
    secondDown: Optional[float] = None
    thirdDown: Optional[float] = None


class GamePPA(BaseModel):
    conference: Optional[str] = None
    defense: Optional[Defense3] = None
    gameId: Optional[int] = None
    offense: Optional[Offense3] = None
    opponent: Optional[str] = None
    season: Optional[int] = None
    team: Optional[str] = None
    week: Optional[int] = None


class GameWeather(BaseModel):
    awayConference: Optional[str] = None
    awayTeam: Optional[str] = None
    dewPoint: Optional[float] = None
    gameIndoors: Optional[bool] = None
    homeConference: Optional[str] = None
    homeTeam: Optional[str] = None
    humidity: Optional[float] = None
    id: Optional[int] = None
    precipitation: Optional[float] = None
    pressure: Optional[float] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    snowfall: Optional[float] = None
    startTime: Optional[str] = None
    temperature: Optional[float] = None
    venue: Optional[str] = None
    venueId: Optional[int] = None
    weatherCondition: Optional[str] = None
    weatherConditionCode: Optional[int] = None
    week: Optional[int] = None
    windDirection: Optional[float] = None
    windSpeed: Optional[float] = None


class Play(BaseModel):
    awayScore: Optional[int] = None
    clock: Optional[str] = None
    distance: Optional[int] = None
    down: Optional[int] = None
    downType: Optional[str] = None
    epa: Optional[float] = None
    garbageTime: Optional[bool] = None
    homeScore: Optional[int] = None
    id: Optional[int] = None
    period: Optional[int] = None
    playText: Optional[str] = None
    playType: Optional[str] = None
    playTypeId: Optional[int] = None
    rushPass: Optional[str] = None
    success: Optional[bool] = None
    team: Optional[str] = None
    teamId: Optional[int] = None
    wallclock: Optional[str] = None
    yardsGained: Optional[int] = None
    yardsToGoal: Optional[int] = None


class Drive1(BaseModel):
    defense: Optional[str] = None
    defenseId: Optional[int] = None
    duration: Optional[str] = None
    endClock: Optional[str] = None
    endPeriod: Optional[int] = None
    endYardsToGoal: Optional[int] = None
    id: Optional[int] = None
    offense: Optional[str] = None
    offenseId: Optional[int] = None
    playCount: Optional[int] = None
    plays: Optional[List[Play]] = None
    scoringOpportunity: Optional[bool] = None
    startClock: Optional[str] = None
    startPeriod: Optional[int] = None
    startYardsToGoal: Optional[int] = None
    yards: Optional[int] = None


class Team(BaseModel):
    drives: Optional[int] = None
    epaPerPass: Optional[float] = None
    epaPerPlay: Optional[float] = None
    epaPerRush: Optional[float] = None
    explosiveness: Optional[float] = None
    homeAway: Optional[str] = None
    lineYards: Optional[int] = None
    lineYardsPerRush: Optional[float] = None
    openFieldYards: Optional[int] = None
    openFieldYardsPerRush: Optional[float] = None
    passingDownSuccessRate: Optional[float] = None
    passingEpa: Optional[float] = None
    plays: Optional[int] = None
    points: Optional[int] = None
    pointsPerOpportunity: Optional[float] = None
    rushingEpa: Optional[float] = None
    scoringOpportunities: Optional[int] = None
    secondLevelYards: Optional[int] = None
    secondLevelYardsPerRush: Optional[float] = None
    standardDownSuccessRate: Optional[float] = None
    successRate: Optional[float] = None
    team: Optional[str] = None
    teamId: Optional[int] = None
    totalEpa: Optional[float] = None


class LivePlayByPlay(BaseModel):
    clock: Optional[str] = None
    distance: Optional[int] = None
    down: Optional[int] = None
    drives: Optional[List[Drive1]] = None
    id: Optional[int] = None
    period: Optional[int] = None
    possession: Optional[str] = None
    status: Optional[str] = None
    teams: Optional[List[Team]] = None
    yardsToGoal: Optional[int] = None


class Clock(BaseModel):
    minutes: Optional[int] = None
    seconds: Optional[int] = None


class Play1(BaseModel):
    away: Optional[str] = None
    clock: Optional[Clock] = None
    defense: Optional[str] = None
    defense_conference: Optional[str] = None
    defense_score: Optional[int] = None
    defense_timeouts: Optional[int] = None
    distance: Optional[int] = None
    down: Optional[int] = None
    drive_id: Optional[int] = None
    drive_number: Optional[int] = None
    game_id: Optional[int] = None
    home: Optional[str] = None
    id: Optional[int] = None
    offense: Optional[str] = None
    offense_conference: Optional[str] = None
    offense_score: Optional[int] = None
    offense_timeouts: Optional[int] = None
    period: Optional[int] = None
    play_number: Optional[int] = None
    play_text: Optional[str] = None
    play_type: Optional[str] = None
    ppa: Optional[float] = None
    scoring: Optional[bool] = None
    wallclock: Optional[str] = None
    yard_line: Optional[int] = None
    yards_gained: Optional[int] = None
    yards_to_goal: Optional[int] = None


class PlayStat(BaseModel):
    athleteId: Optional[int] = None
    athleteName: Optional[str] = None
    clock: Optional[Clock] = None
    conference: Optional[str] = None
    distance: Optional[int] = None
    down: Optional[int] = None
    driveId: Optional[int] = None
    gameId: Optional[int] = None
    opponent: Optional[str] = None
    opponentScore: Optional[int] = None
    period: Optional[int] = None
    playId: Optional[int] = None
    season: Optional[int] = None
    stat: Optional[int] = None
    statType: Optional[str] = None
    team: Optional[str] = None
    teamScore: Optional[int] = None
    week: Optional[int] = None
    yardsToGoal: Optional[int] = None


class PlayStatType(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None


class PlayType(BaseModel):
    abbreviation: Optional[str] = None
    id: Optional[int] = None
    text: Optional[str] = None


class PlayWP(BaseModel):
    away: Optional[str] = None
    awayId: Optional[int] = None
    awayScore: Optional[int] = None
    distance: Optional[int] = None
    down: Optional[int] = None
    gamesId: Optional[int] = None
    home: Optional[str] = None
    homeBall: Optional[bool] = None
    homeId: Optional[int] = None
    homeScore: Optional[int] = None
    homeWinProb: Optional[float] = None
    playId: Optional[int] = None
    playNumber: Optional[int] = None
    playText: Optional[str] = None
    spread: Optional[float] = None
    timeRemaining: Optional[int] = None
    yardLine: Optional[int] = None


class Player(BaseModel):
    first_name: Optional[str] = None
    height: Optional[int] = None
    home_city: Optional[str] = None
    home_country: Optional[str] = None
    home_county_fips: Optional[str] = None
    home_latitude: Optional[float] = None
    home_longitude: Optional[float] = None
    home_state: Optional[str] = None
    id: Optional[int] = None
    jersey: Optional[int] = None
    last_name: Optional[str] = None
    position: Optional[str] = None
    recruit_ids: Optional[List[int]] = None
    team: Optional[str] = None
    weight: Optional[int] = None
    year: Optional[int] = None


class Athlete(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    stat: Optional[str] = None


class Type(BaseModel):
    athletes: Optional[List[Athlete]] = None
    name: Optional[str] = None


class Category(BaseModel):
    name: Optional[str] = None
    types: Optional[List[Type]] = None


class School(BaseModel):
    conference: Optional[str] = None
    name: Optional[str] = None


class Team1(BaseModel):
    categories: Optional[List[Category]] = None
    homeAway: Optional[bool] = None
    points: Optional[int] = None
    school: Optional[School] = None


class PlayerGame(BaseModel):
    id: Optional[int] = None
    teams: Optional[List[Team1]] = None


class AveragePPA(BaseModel):
    all: Optional[float] = None
    pass_: Optional[float] = Field(None, alias='pass')
    rush: Optional[float] = None


class PlayerGamePPA(BaseModel):
    averagePPA: Optional[AveragePPA] = None
    name: Optional[str] = None
    opponent: Optional[str] = None
    position: Optional[str] = None
    season: Optional[int] = None
    team: Optional[str] = None
    week: Optional[int] = None


class PlayerSearchResult(BaseModel):
    firstName: Optional[str] = None
    height: Optional[int] = None
    hometown: Optional[str] = None
    id: Optional[int] = None
    jersey: Optional[int] = None
    lastName: Optional[str] = None
    name: Optional[str] = None
    position: Optional[str] = None
    team: Optional[str] = None
    teamColor: Optional[str] = None
    teamColorSecondary: Optional[str] = None
    weight: Optional[int] = None


class AveragePPA1(BaseModel):
    all: Optional[float] = None
    firstDown: Optional[float] = None
    pass_: Optional[float] = Field(None, alias='pass')
    passingDowns: Optional[float] = None
    rush: Optional[float] = None
    secondDown: Optional[float] = None
    standardDowns: Optional[float] = None
    thirdDown: Optional[float] = None


class TotalPPA(BaseModel):
    all: Optional[float] = None
    firstDown: Optional[float] = None
    pass_: Optional[float] = Field(None, alias='pass')
    passingDowns: Optional[float] = None
    rush: Optional[float] = None
    secondDown: Optional[float] = None
    standardDowns: Optional[float] = None
    thirdDown: Optional[float] = None


class PlayerSeasonPPA(BaseModel):
    averagePPA: Optional[AveragePPA1] = None
    conference: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    position: Optional[str] = None
    season: Optional[int] = None
    team: Optional[str] = None
    totalPPA: Optional[TotalPPA] = None


class PlayerSeasonStat(BaseModel):
    category: Optional[str] = None
    conference: Optional[str] = None
    player: Optional[str] = None
    playerId: Optional[int] = None
    season: Optional[int] = None
    stat: Optional[float] = None
    statType: Optional[str] = None
    team: Optional[str] = None


class Usage(BaseModel):
    firstDown: Optional[float] = None
    overall: Optional[float] = None
    pass_: Optional[float] = Field(None, alias='pass')
    passingDowns: Optional[float] = None
    rush: Optional[float] = None
    secondDown: Optional[float] = None
    standardDowns: Optional[float] = None
    thirdDown: Optional[float] = None


class PlayerUsage(BaseModel):
    conference: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    position: Optional[str] = None
    season: Optional[int] = None
    team: Optional[str] = None
    usage: Optional[Usage] = None


class PortalPlayer(BaseModel):
    destination: Optional[str] = None
    eligibility: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    origin: Optional[str] = None
    position: Optional[str] = None
    rating: Optional[float] = None
    season: Optional[int] = None
    stars: Optional[int] = None
    transferDate: Optional[str] = None


class PositionGroupRecruitingRating(BaseModel):
    averageRating: Optional[float] = None
    averageStars: Optional[float] = None
    commits: Optional[float] = None
    conference: Optional[str] = None
    positionGroup: Optional[str] = None
    team: Optional[str] = None
    totalRating: Optional[float] = None


class PredictedPoints(BaseModel):
    predictedPoints: Optional[float] = None
    yardLine: Optional[int] = None


class PregameWP(BaseModel):
    awayTeam: Optional[str] = None
    gameId: Optional[int] = None
    homeTeam: Optional[str] = None
    homeWinProb: Optional[float] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    spread: Optional[float] = None
    week: Optional[int] = None


class Rank(BaseModel):
    conference: Optional[str] = None
    firstPlaceVotes: Optional[int] = None
    points: Optional[int] = None
    rank: Optional[int] = None
    school: Optional[str] = None


class Poll(BaseModel):
    poll: Optional[str] = None
    ranks: Optional[List[Rank]] = None


class RankingWeek(BaseModel):
    polls: Optional[List[Poll]] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    week: Optional[int] = None


class HometownInfo1(BaseModel):
    countyFips: Optional[str] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None


class Recruit(BaseModel):
    athleteId: Optional[int] = None
    city: Optional[str] = None
    committedTo: Optional[str] = None
    country: Optional[str] = None
    height: Optional[float] = None
    hometownInfo: Optional[HometownInfo1] = None
    id: Optional[int] = None
    name: Optional[str] = None
    position: Optional[str] = None
    ranking: Optional[int] = None
    rating: Optional[float] = None
    recruitType: Optional[str] = None
    school: Optional[str] = None
    stars: Optional[int] = None
    stateProvince: Optional[str] = None
    weight: Optional[int] = None
    year: Optional[int] = None


class ReturningProduction(BaseModel):
    conference: Optional[str] = None
    passingUsage: Optional[float] = None
    percentPPA: Optional[float] = None
    percentPassingPPA: Optional[float] = None
    percentReceivingPPA: Optional[float] = None
    percentRushingPPA: Optional[float] = None
    receivingUsage: Optional[float] = None
    rushingUsage: Optional[float] = None
    season: Optional[int] = None
    team: Optional[str] = None
    totalPPA: Optional[float] = None
    totalPassingPPA: Optional[float] = None
    totalReceivingPPA: Optional[float] = None
    totalRushingPPA: Optional[float] = None
    usage: Optional[float] = None


class AwayTeam(BaseModel):
    classification: Optional[str] = None
    conference: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    points: Optional[int] = None


class Betting(BaseModel):
    awayMoneyline: Optional[int] = None
    homeMoneyline: Optional[int] = None
    overUnder: Optional[float] = None
    spread: Optional[float] = None


class HomeTeam(BaseModel):
    classification: Optional[str] = None
    conference: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    points: Optional[int] = None


class Venue(BaseModel):
    city: Optional[str] = None
    name: Optional[str] = None
    state: Optional[str] = None


class Weather(BaseModel):
    description: Optional[str] = None
    temperature: Optional[float] = None
    windDirection: Optional[float] = None
    windSpeed: Optional[float] = None


class ScoreboardGame(BaseModel):
    awayTeam: Optional[AwayTeam] = None
    betting: Optional[Betting] = None
    clock: Optional[str] = None
    conferenceGame: Optional[bool] = None
    homeTeam: Optional[HomeTeam] = None
    id: Optional[int] = None
    neutralSite: Optional[bool] = None
    period: Optional[int] = None
    possession: Optional[str] = None
    situation: Optional[str] = None
    startDate: Optional[str] = None
    startTimeTBD: Optional[bool] = None
    status: Optional[str] = None
    tv: Optional[str] = None
    venue: Optional[Venue] = None
    weather: Optional[Weather] = None


class Location(BaseModel):
    capacity: Optional[float] = None
    city: Optional[str] = None
    country_code: Optional[str] = None
    dome: Optional[bool] = None
    elevation: Optional[float] = None
    grass: Optional[bool] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    name: Optional[str] = None
    state: Optional[str] = None
    timezone: Optional[str] = None
    venue_id: Optional[int] = None
    year_constructed: Optional[float] = None
    zip: Optional[str] = None


class Team2(BaseModel):
    abbreviation: Optional[str] = None
    alt_color: Optional[str] = None
    alt_name_1: Optional[str] = None
    alt_name_2: Optional[str] = None
    alt_name_3: Optional[str] = None
    classification: Optional[str] = None
    color: Optional[str] = None
    conference: Optional[str] = None
    division: Optional[str] = None
    id: Optional[int] = None
    location: Optional[Location] = None
    logos: Optional[List[str]] = None
    mascot: Optional[str] = None
    school: Optional[str] = None
    twitter: Optional[str] = None


class TeamEloRating(BaseModel):
    conference: Optional[str] = None
    elo: Optional[float] = None
    team: Optional[str] = None
    year: Optional[int] = None


class Stat(BaseModel):
    category: Optional[str] = None
    stat: Optional[str] = None


class Team3(BaseModel):
    conference: Optional[str] = None
    homeAway: Optional[str] = None
    points: Optional[int] = None
    school: Optional[str] = None
    stats: Optional[List[Stat]] = None


class TeamGame(BaseModel):
    id: Optional[int] = None
    teams: Optional[List[Team3]] = None


class Game1(BaseModel):
    awayScore: Optional[int] = None
    awayTeam: Optional[str] = None
    date: Optional[str] = None
    homeScore: Optional[int] = None
    homeTeam: Optional[str] = None
    neutralSite: Optional[bool] = None
    season: Optional[int] = None
    season_type: Optional[str] = None
    venue: Optional[str] = None
    week: Optional[int] = None
    winner: Optional[str] = None


class TeamMatchup(BaseModel):
    endYear: Optional[int] = None
    games: Optional[List[Game1]] = None
    startYear: Optional[int] = None
    team1: Optional[str] = None
    team1Wins: Optional[int] = None
    team2: Optional[str] = None
    team2Wins: Optional[int] = None
    ties: Optional[int] = None


class Cumulative1(BaseModel):
    passing: Optional[float] = None
    rushing: Optional[float] = None
    total: Optional[float] = None


class Defense4(BaseModel):
    cumulative: Optional[Cumulative1] = None
    firstDown: Optional[float] = None
    overall: Optional[float] = None
    passing: Optional[float] = None
    rushing: Optional[float] = None
    secondDown: Optional[float] = None
    thirdDown: Optional[float] = None


class Offense4(BaseModel):
    cumulative: Optional[Cumulative1] = None
    firstDown: Optional[float] = None
    overall: Optional[float] = None
    passing: Optional[float] = None
    rushing: Optional[float] = None
    secondDown: Optional[float] = None
    thirdDown: Optional[float] = None


class TeamPPA(BaseModel):
    conference: Optional[str] = None
    defense: Optional[Defense4] = None
    offense: Optional[Offense4] = None
    season: Optional[int] = None
    team: Optional[str] = None


class AwayGames(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    ties: Optional[int] = None
    wins: Optional[int] = None


class ConferenceGames(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    ties: Optional[int] = None
    wins: Optional[int] = None


class HomeGames(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    ties: Optional[int] = None
    wins: Optional[int] = None


class Total(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    ties: Optional[int] = None
    wins: Optional[int] = None


class TeamRecord(BaseModel):
    awayGames: Optional[AwayGames] = None
    conference: Optional[str] = None
    conferenceGames: Optional[ConferenceGames] = None
    division: Optional[str] = None
    expectedWins: Optional[float] = None
    homeGames: Optional[HomeGames] = None
    team: Optional[str] = None
    total: Optional[Total] = None
    year: Optional[int] = None


class TeamRecruitingRank(BaseModel):
    points: Optional[float] = None
    rank: Optional[int] = None
    team: Optional[str] = None
    year: Optional[int] = None


class Defense5(BaseModel):
    explosiveness: Optional[float] = None
    havoc: Optional[Havoc] = None
    pasing: Optional[float] = None
    passingDowns: Optional[float] = None
    ranking: Optional[float] = None
    rating: Optional[float] = None
    rushing: Optional[float] = None
    standardDowns: Optional[float] = None
    success: Optional[float] = None


class Offense5(BaseModel):
    explosiveness: Optional[float] = None
    pace: Optional[float] = None
    passing: Optional[float] = None
    passingDowns: Optional[float] = None
    ranking: Optional[float] = None
    rating: Optional[float] = None
    runRate: Optional[float] = None
    rushing: Optional[float] = None
    standardDowns: Optional[float] = None
    success: Optional[float] = None


class TeamSPRating(BaseModel):
    conference: Optional[str] = None
    defense: Optional[Defense5] = None
    offense: Optional[Offense5] = None
    ranking: Optional[float] = None
    rating: Optional[float] = None
    secondOrderWins: Optional[float] = None
    sos: Optional[float] = None
    specialTeams: Optional[SpecialTeams] = None
    team: Optional[str] = None
    year: Optional[int] = None


class TeamSRSRating(BaseModel):
    conference: Optional[str] = None
    division: Optional[str] = None
    ranking: Optional[float] = None
    rating: Optional[float] = None
    team: Optional[str] = None
    year: Optional[int] = None


class TeamSeason(BaseModel):
    games: Optional[int] = None
    losses: Optional[int] = None
    postseason_rank: Optional[int] = Field(
        None, description='Final ranking in the AP poll'
    )
    preseason_rank: Optional[int] = Field(
        None, description='Rank in the AP preseason poll'
    )
    school: Optional[str] = None
    sp_defense: Optional[float] = Field(None, description='Final SP+ defensive rating')
    sp_offense: Optional[float] = Field(None, description='Final SP+ offensive rating')
    sp_overall: Optional[float] = Field(None, description='Final overall SP+ rating')
    srs: Optional[float] = Field(None, description='Final SRS rankings')
    ties: Optional[int] = None
    wins: Optional[int] = None
    year: Optional[str] = None


class TeamSeasonStat(BaseModel):
    conference: Optional[str] = None
    season: Optional[int] = None
    statName: Optional[str] = None
    statValue: Optional[int] = None
    team: Optional[str] = None


class TeamTalent(BaseModel):
    school: Optional[str] = None
    talent: Optional[float] = None
    year: Optional[int] = None


class Location1(BaseModel):
    x: Optional[float] = None
    y: Optional[float] = None


class Venue1(BaseModel):
    capacity: Optional[int] = None
    city: Optional[str] = None
    country_code: Optional[str] = None
    dome: Optional[bool] = None
    elevation: Optional[float] = None
    grass: Optional[bool] = None
    id: Optional[int] = None
    location: Optional[Location1] = None
    name: Optional[str] = None
    state: Optional[str] = None
    timezone: Optional[str] = None
    year_constructed: Optional[int] = None
    zip: Optional[str] = None


class Week(BaseModel):
    firstGameStart: Optional[str] = None
    lastGameStart: Optional[str] = None
    season: Optional[int] = None
    seasonType: Optional[str] = None
    week: Optional[int] = None


class CalendarGetResponse(RootModel[List[Week]]):
    root: List[Week]


class CoachesGetResponse(RootModel[List[Coach]]):
    root: List[Coach]


class ConferencesGetResponse(RootModel[List[Conference]]):
    root: List[Conference]


class DraftPicksGetResponse(RootModel[List[DraftPick]]):
    root: List[DraftPick]


class DraftPositionsGetResponse(RootModel[List[DraftPosition]]):
    root: List[DraftPosition]


class DraftTeamsGetResponse(RootModel[List[DraftTeam]]):
    root: List[DraftTeam]


class DrivesGetResponse(RootModel[List[Drive]]):
    root: List[Drive]


class GamesGetResponse(RootModel[List[Game]]):
    root: List[Game]


class GamesMediaGetResponse(RootModel[List[GameMedia]]):
    root: List[GameMedia]


class GamesPlayersGetResponse(RootModel[List[PlayerGame]]):
    root: List[PlayerGame]


class GamesTeamsGetResponse(RootModel[List[TeamGame]]):
    root: List[TeamGame]


class GamesWeatherGetResponse(RootModel[List[GameWeather]]):
    root: List[GameWeather]


class LinesGetResponse(RootModel[List[GameLines]]):
    root: List[GameLines]


class MetricsWpGetResponse(RootModel[List[PlayWP]]):
    root: List[PlayWP]


class MetricsWpPregameGetResponse(RootModel[List[PregameWP]]):
    root: List[PregameWP]


class PlayStatTypesGetResponse(RootModel[List[PlayStatType]]):
    root: List[PlayStatType]


class PlayStatsGetResponse(RootModel[List[PlayStat]]):
    root: List[PlayStat]


class PlayTypesGetResponse(RootModel[List[PlayType]]):
    root: List[PlayType]


class PlayerPortalGetResponse(RootModel[List[PortalPlayer]]):
    root: List[PortalPlayer]


class PlayerReturningGetResponse(RootModel[List[ReturningProduction]]):
    root: List[ReturningProduction]


class PlayerSearchGetResponse(RootModel[List[PlayerSearchResult]]):
    root: List[PlayerSearchResult]


class PlayerUsageGetResponse(RootModel[List[PlayerUsage]]):
    root: List[PlayerUsage]


class PlaysGetResponse(RootModel[List[Play1]]):
    root: List[Play1]


class PpaGamesGetResponse(RootModel[List[GamePPA]]):
    root: List[GamePPA]


class PpaPlayersGamesGetResponse(RootModel[List[PlayerGamePPA]]):
    root: List[PlayerGamePPA]


class PpaPlayersSeasonGetResponse(RootModel[List[PlayerSeasonPPA]]):
    root: List[PlayerSeasonPPA]


class PpaPredictedGetResponse(RootModel[List[PredictedPoints]]):
    root: List[PredictedPoints]


class PpaTeamsGetResponse(RootModel[List[TeamPPA]]):
    root: List[TeamPPA]


class RankingsGetResponse(RootModel[List[RankingWeek]]):
    root: List[RankingWeek]


class RatingsEloGetResponse(RootModel[List[TeamEloRating]]):
    root: List[TeamEloRating]


class RatingsSpGetResponse(RootModel[List[TeamSPRating]]):
    root: List[TeamSPRating]


class RatingsSpConferencesGetResponse(RootModel[List[ConferenceSPRating]]):
    root: List[ConferenceSPRating]


class RatingsSrsGetResponse(RootModel[List[TeamSRSRating]]):
    root: List[TeamSRSRating]


class RecordsGetResponse(RootModel[List[TeamRecord]]):
    root: List[TeamRecord]


class RecruitingGroupsGetResponse(RootModel[List[PositionGroupRecruitingRating]]):
    root: List[PositionGroupRecruitingRating]


class RecruitingPlayersGetResponse(RootModel[List[Recruit]]):
    root: List[Recruit]


class RecruitingTeamsGetResponse(RootModel[List[TeamRecruitingRank]]):
    root: List[TeamRecruitingRank]


class RosterGetResponse(RootModel[List[Player]]):
    root: List[Player]


class ScoreboardGetResponse(RootModel[List[ScoreboardGame]]):
    root: List[ScoreboardGame]


class StatsCategoriesGetResponse(RootModel[List[str]]):
    root: List[str]


class StatsGameAdvancedGetResponse(RootModel[List[AdvancedGameStat]]):
    root: List[AdvancedGameStat]


class StatsPlayerSeasonGetResponse(RootModel[List[PlayerSeasonStat]]):
    root: List[PlayerSeasonStat]


class StatsSeasonGetResponse(RootModel[List[TeamSeasonStat]]):
    root: List[TeamSeasonStat]


class StatsSeasonAdvancedGetResponse(RootModel[List[AdvancedSeasonStat]]):
    root: List[AdvancedSeasonStat]


class TalentGetResponse(RootModel[List[TeamTalent]]):
    root: List[TeamTalent]


class TeamsGetResponse(RootModel[List[Team2]]):
    root: List[Team2]


class TeamsFbsGetResponse(RootModel[List[Team2]]):
    root: List[Team2]


class VenuesGetResponse(RootModel[List[Venue1]]):
    root: List[Venue1]
